document.addEventListener('DOMContentLoaded', () => {
    const progressBar = document.querySelector('.progress-bar');
    const lineChild = document.querySelector('.lineChild');
    const currentTimeElement = document.getElementById('current-time');
    const totalTimeElement = document.getElementById('total-time');

    let totalDuration = 196; // –û–±—â–µ–µ –≤—Ä–µ–º—è —Ç—Ä–µ–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø—Ä–∏–º–µ—Ä–Ω–æ 03:16)
    let currentTime = 0; // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏



    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏
    function updateProgressBar(current) {
        const progressPercentage = (current / totalDuration) * 100;
        lineChild.style.width = `${progressPercentage}%`;
        currentTimeElement.textContent = formatTime(current);
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ MM:SS
    function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
    progressBar.addEventListener('click', (e) => {
        const rect = progressBar.getBoundingClientRect();
        const clickX = e.clientX - rect.left;
        const newTime = (clickX / progressBar.offsetWidth) * totalDuration;
        currentTime = newTime;
        updateProgressBar(currentTime);
    });

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –ø–æ–ª–∑—É–Ω–∫–∞
    let isDragging = false;

    // –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    lineChild.addEventListener('mousedown', (e) => {
        isDragging = true;
        updateFromEvent(e);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    document.addEventListener('mousemove', (e) => {
        if (isDragging) {
            updateFromEvent(e);
        }
    });

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    document.addEventListener('mouseup', () => {
        if (isDragging) {
            isDragging = false;
        }
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
    function updateFromEvent(e) {
        const rect = progressBar.getBoundingClientRect();
        let clickX = e.clientX - rect.left;

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ —à–∏—Ä–∏–Ω—ã –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        if (clickX < 0) clickX = 0;
        if (clickX > progressBar.offsetWidth) clickX = progressBar.offsetWidth;

        const newTime = (clickX / progressBar.offsetWidth) * totalDuration;
        currentTime = newTime;
        updateProgressBar(currentTime);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    updateProgressBar(currentTime);
});


document.addEventListener('DOMContentLoaded', () => {
    const volumeBar = document.querySelector('.volume-bar');
    const volumeLevel = document.querySelector('.volume-level');
    const volumeIcon = document.getElementById('volume-icon');

    let volume = 50; // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ (–æ—Ç 0 –¥–æ 100)

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–æ—Å—ã –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∏ –∏–∫–æ–Ω–∫–∏
    function updateVolumeBar(currentVolume) {
        const volumePercentage = currentVolume; // –¢–∞–∫ –∫–∞–∫ –≥—Ä–æ–º–∫–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (–æ—Ç 0 –¥–æ 100)
        volumeLevel.style.width = `${volumePercentage}%`;
        updateVolumeIcon(currentVolume);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    function updateVolumeIcon(currentVolume) {
        if (currentVolume === 0) {
            volumeIcon.textContent = 'üîá'; // –ò–∫–æ–Ω–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        } else if (currentVolume > 0 && currentVolume <= 50) {
            volumeIcon.textContent = 'üîâ'; // –ò–∫–æ–Ω–∫–∞ —Å—Ä–µ–¥–Ω–µ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        } else {
            volumeIcon.textContent = 'üîä'; // –ò–∫–æ–Ω–∫–∞ –≤—ã—Å–æ–∫–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø–æ–ª–æ—Å—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    volumeBar.addEventListener('click', (e) => {
        const rect = volumeBar.getBoundingClientRect();
        const clickX = e.clientX - rect.left;
        const newVolume = (clickX / volumeBar.offsetWidth) * 100;
        volume = newVolume;
        updateVolumeBar(volume);
    });

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –±–µ–≥—É–Ω–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    let isDraggingVolume = false;

    // –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    volumeLevel.addEventListener('mousedown', (e) => {
        isDraggingVolume = true;
        updateVolumeFromEvent(e);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    document.addEventListener('mousemove', (e) => {
        if (isDraggingVolume) {
            updateVolumeFromEvent(e);
        }
    });

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    document.addEventListener('mouseup', () => {
        if (isDraggingVolume) {
            isDraggingVolume = false;
        }
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
    function updateVolumeFromEvent(e) {
        const rect = volumeBar.getBoundingClientRect();
        let clickX = e.clientX - rect.left;

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ —à–∏—Ä–∏–Ω—ã –ø–æ–ª–æ—Å—ã –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        if (clickX < 0) clickX = 0;
        if (clickX > volumeBar.offsetWidth) clickX = volumeBar.offsetWidth;

        const newVolume = (clickX / volumeBar.offsetWidth) * 100;
        volume = newVolume;
        updateVolumeBar(volume);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    updateVolumeBar(volume);
});